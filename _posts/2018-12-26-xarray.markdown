---
title: "Handling NetCDF files using XArray for absolute beginners"
layout: post
date: 2018-12-26 15:00
published: true
headerImage: false
tag:
- xarray
- NetCDF
- Python
- DataScience
category: blog
author: edenau
description: xarray basics
# jemoji: '<img class="emoji" title=":ramen:" alt=":ramen:" src="https://assets.github.com/images/icons/emoji/unicode/1f35c.png" height="20" width="20" align="absmiddle">'
---

This post is now available on <a href="https://medium.com/@edenau/handling-netcdf-files-using-xarray-for-absolute-beginners-111a8ab4463f" target="_blank">Medium</a>. Check it out!

# Introduction

NetCDF is a machine-independent, array-oriented, multi-dimensional, self-describing, and portable data format used by various scientific communities. It has a filename extension of *.nc* or *.cdf* (though it is believed that there are subtle differences between the two). Unlike files in *.csv* or *.xlsx*, NetCDF format cannot be accessed and viewed directly using spreadsheet software. Even if you could, you would not do that on a 4-dimensional data with a bunch of metadata.

I will take climate data from <a href="https://www.arm.gov/" target="_blank">*Atmospheric Radiation Measurement Climate Research Facility*</a> (ARM) in the United States, and <a href="https://www.ecmwf.int/" target="_blank">*European Centre for Medium-Range Weather Forecasts*</a> (ECMWF) in Europe as an example.

# Prerequisites

We will use `xarray` library in Python for data processing. Long story short, it builds upon `numpy` (and `dask`) libraries and leverages the power of `pandas`, but you probably don’t need to know about it. As you might know, package dependency is a pain in Python. That is why the most convenient way to get everything installed is to use the following command:

```
$ conda install xarray dask netCDF4 bottleneck
```

Experienced Python programmers are recommended check the relevant <a href="http://xarray.pydata.org/en/stable/installing.html" target="_blank">documentation</a> for more details. If you are a beginner, no worries. I made a list of dependencies that you need to check:
- ***Python 2.7/3.5+*** required
- ***numpy 1.12+*** required
- ***pandas 0.19.2+*** required
- ***scipy*** for interpolation features
- ***bottleneck*** for speeding up NaN-skipping
- ***netCDF4-python*** for basic netCDF operation such as reading/writing
- ***dask-array 0.16+*** for parallel computing with *dask*
If you want to visualize your dataset, you will probably need these:
- ***matplotlib 1.5+*** for plotting
- ***cartopy*** for maps
- ***seaborn*** for better colour palettes

For absolute beginners, you can check your default version of Python by
```
$ python --version
Python 2.7.5
```
You can also check if Python3 is installed by
```
$ python3 --version
Python 3.4.9
```
To check the version of packages, use `pip freeze` or `conda list`. Things should check out if you install `xarray` through `conda`.

# Alternatives

<a href="https://scitools.org.uk/iris/docs/latest/" target="_blank">`iris`</a> is an alternative to `xarray`, but some works need to be done to make it work on Windows, and it does not work well on Mac OS. Iris is also an English word, so googling ‘iris’ gives you many irrelevant results. It was a pain for me to use `iris`.
